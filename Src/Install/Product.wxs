<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
     xmlns:ps="http://schemas.microsoft.com/wix/PSExtension"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <?include GlobalVariables.wxi ?>

  <?define InstallUtilExe32 = "[WindowsFolder]\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe" ?>
  <?define InstallUtilExe64 = "[WindowsFolder]\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe" ?>
  <?define TempDir = "[TempFolder]" ?>
  <?define OutputDir = "..\..\bin\Release\net472" ?>

  <?define BuildNumber = "$(var.ProductVersion_Major).$(var.ProductVersion_Minor).$(var.ProductVersion_Release).$(var.ProductVersion_Build)" ?>

  <Product
    Id="*"
    Name="SolarWinds Orion SDK v$(var.ProductVersion)"
    Language="1033"
    Version="$(var.ProductVersion)"
    Manufacturer="SolarWinds"
    UpgradeCode="584A809C-D4F9-4312-96A9-BAFFDCB9393A">

    <Package
      InstallerVersion="200"
      Compressed="yes"
      Platform="x64"
      InstallScope="perMachine" />

    <PropertyRef Id="NETFRAMEWORK40FULL"/>

    <Condition Message="This application requires .NET Framework 4.0 or later. Please install the .NET Framework then run this installer again.">
      <![CDATA[Installed OR NETFRAMEWORK40FULL]]>
    </Condition>

    <?include AddRemovePrograms.wxi ?>

    <Upgrade Id="584A809C-D4F9-4312-96A9-BAFFDCB9393A">
      <UpgradeVersion Minimum="0.0.0"
                      IncludeMinimum="yes"
                      Maximum="$(var.ProductVersion)"
                      IncludeMaximum="no"
                      Property="PATCHFOUND" />

      <UpgradeVersion Minimum="$(var.ProductVersion)"
                      IncludeMinimum="no"
                      OnlyDetect="yes"
                      Property="NEWERVERSIONDETECTED" />
    </Upgrade>

    <Media Id="1" Cabinet="orionsdk.cab" EmbedCab="yes" />

    <!-- Prevent downgrading -->
    <CustomAction Id="PreventDowngrading" Error="Newer version already installed." />

    <InstallExecuteSequence>
      <Custom Action="PreventDowngrading" After="FindRelatedProducts">NEWERVERSIONDETECTED</Custom>
      <RemoveExistingProducts After="InstallInitialize" />
    </InstallExecuteSequence>

    <WixVariable Id='WixUIBannerBmp' Value='Graphics\installer_banner.bmp' />
    <WixVariable Id='WixUIDialogBmp' Value='Graphics\installer_background.bmp' />
    <WixVariable Id="WixUILicenseRtf" Value="LICENSE.rtf" />

    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
    
    <UI Id="Product_UI">

      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode" Value="Mondo" />

      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg" />
      <DialogRef Id="ProgressDlg" />
      <DialogRef Id="ResumeDlg" />
      <DialogRef Id="UserExit" />

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return">1</Publish>

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">PATCHFOUND</Publish>
      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT PATCHFOUND</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">LicenseAccepted = "1"</Publish>

      <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg">WixUI_InstallMode = "Change"</Publish>
      <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg">1</Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">PATCHFOUND</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg">WixUI_InstallMode = "Repair" OR WixUI_InstallMode = "Remove"</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg">NOT PATCHFOUND</Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton" Event="NewDialog" Value="InstallDirDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>
    </UI>

    <UIRef Id="WixUI_Common" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFilesFolder">
        <Directory Id="SolarWinds" Name="SolarWinds">
          <Directory Id="INSTALLDIR" Name="Orion SDK">
            
            <Directory Id="SwqlStudioDir" Name="SWQL Studio">
              <Component Id="SwqlStudioComponent" Guid="BC0A98E5-219C-4d5a-9A14-A10A13546DB8">
                <File Id="SwqlStudioExe" Source="$(var.OutputDir)\SwqlStudio.exe" />
                <File Source="$(var.OutputDir)\SwqlStudio.exe.config" />
                <File Source="$(var.OutputDir)\log4net.dll" />
                <File Source="$(var.OutputDir)\ScintillaNet.dll" />
                <File Source="$(var.OutputDir)\SolarWinds.SDK.Swis.Contract.dll" />
                <File Source="$(var.OutputDir)\SolarWinds.Logging.dll" />
                <File Source="$(var.OutputDir)\Security.Cryptography.dll" />
                <File Source="$(var.OutputDir)\WeifenLuo.WinFormsUI.Docking.dll" />
                <File Source="$(var.OutputDir)\WeifenLuo.WinFormsUI.Docking.ThemeVS2015.dll" />
              </Component>
              
              <Component Id="SwisSnapInComponent" Guid="D229051F-C183-4D52-99CD-8C171031086D">
                <File Id="SwisPowerShell" Source="..\SwisPowerShell\bin\Release\SwisPowerShell.dll" KeyPath="yes" Assembly=".net" AssemblyApplication="SwisPowerShell">
                  <ps:SnapIn Id="SwisSnapIn" />                  
                </File>
              </Component>
            </Directory>

          </Directory>
        </Directory>

        <Directory Id="WindowsPowerShell" Name="WindowsPowerShell">
          <Directory Id="Modules" Name="Modules">
            <Directory Id="SwisPowerShell" Name="SwisPowerShell">
              <Directory Id="psm_Version" Name="$(var.BuildNumber)">
                <Component Id="SwisPowerShellModule" Guid="077E4881-0A55-4646-BF7A-25F1B084348B">
                  <File Id="psm_SwisPowerShellDll" Source="..\SwisPowerShell\bin\Release\SwisPowerShell.dll" />
                  <File Id="psm_SwisPowerShell.psd1" Source="..\SwisPowerShell\bin\Release\SwisPowerShell.psd1" />
                  <File Id="psm_SolarWinds.SDK.Swis.Contract.dll" Source="$(var.OutputDir)\SolarWinds.SDK.Swis.Contract.dll" />
                  <File Id="psm_log4net.dll" Source="$(var.OutputDir)\log4net.dll" />
                  <File Id="psm_SolarWinds.Logging.dll" Source="$(var.OutputDir)\SolarWinds.Logging.dll" />
                </Component>
              </Directory>
            </Directory>
          </Directory>
        </Directory>
      </Directory>

      <Directory Id="ProgramFiles64Folder">
        <Directory Id="WindowsPowerShell64" Name="WindowsPowerShell">
          <Directory Id="Modules64" Name="Modules">
            <Directory Id="SwisPowerShell64" Name="SwisPowerShell">
              <Directory Id="psm64_Version" Name="$(var.BuildNumber)">
                <Component Id="SwisPowerShellModule64" Win64="yes" Guid="8618CFEC-57A9-4C6D-8128-6D204B13015A">
                  <File Id="psm64_SwisPowerShellDll" Source="..\SwisPowerShell\bin\Release\SwisPowerShell.dll" />
                  <File Id="psm64_SwisPowerShell.psd1" Source="..\SwisPowerShell\bin\Release\SwisPowerShell.psd1" />
                  <File Id="psm64_SolarWinds.SDK.Swis.Contract.dll" Source="$(var.OutputDir)\SolarWinds.SDK.Swis.Contract.dll" />
                  <File Id="psm64_log4net.dll" Source="$(var.OutputDir)\log4net.dll" />
                  <File Id="psm64_SolarWinds.Logging.dll" Source="$(var.OutputDir)\SolarWinds.Logging.dll" />
                </Component>
              </Directory>
            </Directory>
          </Directory>
        </Directory>
      </Directory>


      <Directory Id="ProgramMenuFolder" Name="Programs">
        <Directory Id="ProgramMenuDir" Name="SolarWinds Orion SDK">
          <Component Id="ProgramMenuDirComponent" Guid="5D7CB7DD-5A30-434b-9543-4FB42EEB1670">
            <RegistryKey Root="HKCU" Key="Software\SolarWinds\Orion\SDK\Uninstall">
              <RegistryValue Value="Shortcuts" Type="string" KeyPath="yes" />
            </RegistryKey>

            <Shortcut Id="ShortcutToSwqlStudio" Directory="ProgramMenuDir"
                      Name="SWQL Studio"
                      Target="[#SwqlStudioExe]" />

            <util:InternetShortcut Id="ShortcutToSDKForum" Directory="ProgramMenuDir"
                                   Name="Orion SDK Forum on thwack_"
                                   Target="https://thwack.solarwinds.com/community/labs_tht/orion-sdk" />

            <util:InternetShortcut Id="ShortcutToSDKWiki" Directory="ProgramMenuDir"
                                   Name="Orion SDK Documentation on GitHub"
                                   Target="https://github.com/solarwinds/OrionSDK/wiki" />

            <util:InternetShortcut Id="ShortcutToSchemaDoc" Directory="ProgramMenuDir"
                                   Name="Orion Schema Reference"
                                   Target="https://solarwinds.github.io/OrionSDK/schema/" />

            <RemoveFolder Id='RemoveProgramMenuDir' On='uninstall' />
          </Component>
        </Directory>
      </Directory>

    </Directory>

    <Property Id="InstallSwisSnapIn32" Value='unset'/>
    <CustomAction Id='Set_InstallSwisSnapIn32' Property='InstallSwisSnapIn32' Value="&quot;$(var.InstallUtilExe32)&quot; /LogToConsole=false /LogFile= /InstallStateDir=$(var.TempDir) &quot;[#SwisPowerShell]&quot;"/>
    <CustomAction Id="InstallSwisSnapIn32"
           BinaryKey="WixCA" DllEntry="CAQuietExec"
            Execute="deferred" Return="ignore" Impersonate="no">
    </CustomAction>

    <Property Id="UnInstallSwisSnapIn32" Value='unset'/>
    <CustomAction Id='Set_UnInstallSwisSnapIn32' Property='UnInstallSwisSnapIn32' Value="&quot;$(var.InstallUtilExe32)&quot; /u /LogToConsole=false /LogFile= /InstallStateDir=$(var.TempDir) &quot;[#SwisPowerShell]&quot;"/>
    <CustomAction Id="UnInstallSwisSnapIn32"
           BinaryKey="WixCA" DllEntry="CAQuietExec"
            Execute="deferred" Return="ignore" Impersonate="no">
    </CustomAction>

    <Property Id="InstallSwisSnapIn64" Value='unset'/>
    <CustomAction Id='Set_InstallSwisSnapIn64' Property='InstallSwisSnapIn64' Value="&quot;$(var.InstallUtilExe64)&quot; /LogToConsole=false /LogFile= /InstallStateDir=$(var.TempDir) &quot;[#SwisPowerShell]&quot;"/>
    <CustomAction Id="InstallSwisSnapIn64"
            BinaryKey="WixCA" DllEntry="CAQuietExec64"
            Execute="deferred" Return="ignore" Impersonate="no">
    </CustomAction>

    <Property Id="UnInstallSwisSnapIn64" Value='unset'/>
    <CustomAction Id='Set_UnInstallSwisSnapIn64' Property='UnInstallSwisSnapIn64' Value="&quot;$(var.InstallUtilExe64)&quot; /u /LogToConsole=false /LogFile= /InstallStateDir=$(var.TempDir) &quot;[#SwisPowerShell]&quot;"/>
    <CustomAction Id="UnInstallSwisSnapIn64"
            BinaryKey="WixCA" DllEntry="CAQuietExec64"
            Execute="deferred" Return="ignore" Impersonate="no">
    </CustomAction>

    <Feature Id="OrionSDK" Title="Orion SDK" Level="1">
      <ComponentRef Id="SwqlStudioComponent" />
      <ComponentRef Id="ProgramMenuDirComponent" />
      <ComponentRef Id="SwisSnapInComponent" />
      <ComponentRef Id="SwisPowerShellModule" />
      <ComponentRef Id="SwisPowerShellModule64" />
    </Feature>

    <InstallExecuteSequence>
      <Custom Action='Set_InstallSwisSnapIn32' After='CostFinalize'>NOT REMOVE</Custom>
      <Custom Action='InstallSwisSnapIn32'  Before='InstallFinalize'>NOT REMOVE</Custom>
      <Custom Action='Set_InstallSwisSnapIn64' After='CostFinalize'>NOT REMOVE</Custom>
      <Custom Action='InstallSwisSnapIn64'  Before='InstallFinalize'>NOT REMOVE</Custom>

      <Custom Action='Set_UnInstallSwisSnapIn32' After='InstallValidate'>Installed AND (REMOVE="ALL") AND NOT (PATCHFOUND OR UPGRADINGPRODUCTCODE)</Custom>
      <Custom Action='UnInstallSwisSnapIn32'  Before='UnpublishComponents'>Installed AND (REMOVE="ALL") AND NOT (PATCHFOUND OR UPGRADINGPRODUCTCODE)</Custom>
      <Custom Action='Set_UnInstallSwisSnapIn64' After='InstallValidate'>Installed AND (REMOVE="ALL") AND NOT (PATCHFOUND OR UPGRADINGPRODUCTCODE)</Custom>
      <Custom Action='UnInstallSwisSnapIn64'  Before='UnpublishComponents'>Installed AND (REMOVE="ALL") AND NOT (PATCHFOUND OR UPGRADINGPRODUCTCODE)</Custom>
    </InstallExecuteSequence>

    <UIRef Id="WixUI_ErrorProgressText"/>
  </Product>
</Wix>
